package hr.algebra;

import hr.algebra.model.Role;
import hr.algebra.model.User;
import hr.algebra.dal.repos.IUserRepository;

public class RegisterFrame extends javax.swing.JFrame {

    private IUserRepository<User> repo;

    private Callback<User> callback;

    public RegisterFrame(IUserRepository<User> repo, String username, String password) {
        this(repo);
        
        if (username != null)
            tfUsername.setText(username);
        
        if (password != null)
            tfPassword.setText(password);
    }
    
    public RegisterFrame(IUserRepository<User> repo) {
        this.repo = repo;
        initComponents();
        hideErrors();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        btnCreateAccount = new javax.swing.JButton();
        errUsername = new javax.swing.JLabel();
        errPassword = new javax.swing.JLabel();
        lbError = new javax.swing.JLabel();
        tfPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Epic java project register panel");

        jLabel2.setText("Username:");

        jLabel3.setText("Password:");

        btnCreateAccount.setText("Create account");
        btnCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAccountActionPerformed(evt);
            }
        });

        errUsername.setForeground(new java.awt.Color(255, 0, 0));
        errUsername.setText("X");

        errPassword.setForeground(new java.awt.Color(255, 0, 0));
        errPassword.setText("X");

        lbError.setForeground(new java.awt.Color(255, 0, 0));
        lbError.setText("[ERROR PLACEHOLDER]");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCreateAccount)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                                .addComponent(tfPassword))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(errUsername)
                                .addComponent(errPassword)))
                        .addComponent(lbError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errUsername))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(errPassword)
                    .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreateAccount)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAccountActionPerformed
        if (!checkForm()) {
            setError("Some of the data isn't filled out correctly.");
            return;
        }
        
        btnCreateAccount.setEnabled(false);
        
        String username = tfUsername.getText().trim();
        String password = new String(tfPassword.getPassword());
        
        try {
            if (repo.selectMultiple().stream().anyMatch(u -> u.getUsername().equalsIgnoreCase(username))) {
                errUsername.setVisible(true);
                setError("Username already exists");
                btnCreateAccount.setEnabled(true);
                return;
            }

            User user = new User(username, password, Role.USER);
            int userId = repo.create(user);
            user.setId(userId);
            
            if (callback != null) callback.onFinish(user);

            dispose();

        } catch (Exception ex) {
            ex.printStackTrace();
            
            if (ex.getMessage() != null && !ex.getMessage().isEmpty()) {
                setError("Exception: " + ex.getMessage());
            } else {
                setError("Error occurred querying the database.");
            }
            btnCreateAccount.setEnabled(true);
        }
    }//GEN-LAST:event_btnCreateAccountActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateAccount;
    private javax.swing.JLabel errPassword;
    private javax.swing.JLabel errUsername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbError;
    private javax.swing.JPasswordField tfPassword;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

    private void setError(String message) {
        if (message == null) lbError.setVisible(false);
    
        lbError.setText(message);
        lbError.setVisible(true);
    }

    public void setCallback(Callback<User> callback) {
        this.callback = callback;
    }

    private void hideErrors() {
        errUsername.setVisible(false);
        errPassword.setVisible(false);
        lbError.setVisible(false);
    }
    
    private boolean checkForm() {
        boolean ok = true;
        if (tfUsername.getText().length() < 4) {
            errUsername.setVisible(true);
            errUsername.setToolTipText("Username must be 4 or more characters long");   
            ok &= false;
        }
        
        if ((new String(tfPassword.getPassword())).length() < 8) {
            errPassword.setVisible(true);
            errPassword.setToolTipText("Password must be at least 4 characters long.");
            ok &= false;
        }
        return ok;
    }
}


